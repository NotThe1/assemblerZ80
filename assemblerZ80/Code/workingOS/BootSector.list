0001: 0000         ;     File created by MakeZ80Source on Tue Sep 18 10:01:22 EDT 2018 from:
0002: 0000         ;     C:\Users\admin\Dropbox\Resources\CPM\CurrentOS\8080\BootSector.asm
0003: 0000         ; BootSector.asm
0004: 0000
0005: 0000         ; 2017-04-07 Added equates for message IO : BOOT_CON_ADDRESS
0006: 0000         ;				 , and default IOBYTE : IOBYTE_DEFAULT
0007: 0000         ; 2017-03-02 Refactored the CP/M Suite
0008: 0000
0009: 0000                        Include ./stdHeader.Z80
0010: 0000         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0011: 0000         ;     File created by MakeZ80Source on Mon Sep 17 16:25:01 EDT 2018 from:
0012: 0000         ;     C:\Users\admin\Dropbox\Resources\CPM\CurrentOS\8080\stdHeader.asm
0013: 0000         ; stdHeader.asm
0014: 0000         ; standard equates
0015: 0000
0016: 0000         ; 2017-03-02 Refactored the CP/M Suite
0017: 0000
0018: 0000
0019: 0000             TRUE       EQU    -1                   ; not false
0020: 0000             FALSE      EQU    0000H
0021: 0000             ON         EQU    -1
0022: 0000             OFF        EQU    0000H
0023: 0000             LO_NIBBLE_MASK EQU    0FH                  ; mask used to obtain the bytes low four bits
0024: 0000
0025: 0000             BYTE       EQU    1                    ; number of bytes for "byte" type
0026: 0000             WORD       EQU    2                    ; number of bytes for "word" type
0027: 0000
0028: 0000
0029: 0000             ASCII_MASK EQU    7FH                  ; Ascii mask 7 bits
0030: 0000             ZERO       EQU    00H                  ; Zero
0031: 0000             EndOfMessage EQU    00H
0032: 0000
0033: 0000             CTRL_C     EQU    03H                  ; ETX
0034: 0000             CTRL_E     EQU    05H                  ; physical eol
0035: 0000             CTRL_H     EQU    08H                  ; backspace
0036: 0000             CTRL_K     EQU    0BH                  ; VT - Vertical tab
0037: 0000             CTRL_L     EQU    0CH                  ; FF - Form feed
0038: 0000             CTRL_P     EQU    10H                  ; prnt toggle
0039: 0000             CTRL_R     EQU    12H                  ; repeat line
0040: 0000             CTRL_S     EQU    13H                  ; X-OFF stop/start screen
0041: 0000             CTRL_U     EQU    15H                  ; line delete
0042: 0000             CTRL_X     EQU    18H                  ; =ctl-u
0043: 0000             CTRL_Z     EQU    1AH                  ; end of file
0044: 0000
0045: 0000             NULL       EQU    00H                  ; Null
0046: 0000             SOH        EQU    01H                  ; Start of Heading
0047: 0000             BELL       EQU    07H                  ; Bell
0048: 0000             TAB        EQU    09H                  ; Tab
0049: 0000             LF         EQU    0AH                  ; Line Feed
0050: 0000             CR         EQU    0DH                  ; Carriage Return
0051: 0000             SPACE      EQU    20H                  ; Space
0052: 0000             EXCLAIM_POINT EQU    21H                  ; Exclamtion Point
0053: 0000             HASH_TAG   EQU    23H                  ; Sharp sign #
0054: 0000             DOLLAR     EQU    24H                  ; Dollar Sign
0055: 0000             PERCENT    EQU    25H                  ; Percent Sign
0056: 0000             L_PAREN    EQU    28H                  ; Left Paenthesis (
0057: 0000             R_PAREN    EQU    29H                  ; Right Paenthesis )
0058: 0000             ASTERISK   EQU    2AH                  ; Asterisk *
0059: 0000             PLUS_SIGN  EQU    2BH                  ; Plus sign +
0060: 0000             COMMA      EQU    2CH                  ; Comma
0061: 0000             DASH       EQU    2DH                  ; Dash Hyphen -
0062: 0000             PERIOD     EQU    2EH                  ; Period
0063: 0000             SLASH      EQU    2FH                  ; /
0064: 0000             ASCII_ZERO EQU    30H                  ; zero
0065: 0000             COLON      EQU    3AH                  ; Colon
0066: 0000
0067: 0000             SEMICOLON  EQU    3BH                  ; Semi Colon
0068: 0000             LESS_THAN  EQU    3CH                  ; Less Than <
0069: 0000             EQUAL_SIGN EQU    3DH                  ; Equal Sign
0070: 0000             GREATER_THAN EQU    3EH                  ; Greater Than >
0071: 0000             QMARK      EQU    3FH                  ; Question Mark
0072: 0000             UNDER_SCORE EQU    5FH                  ; under score _
0073: 0000             LEFT_ARROW EQU    5FH                  ; Left Arrow ?
0074: 0000             RUBOUT     EQU    7FH                  ; Delete Key
0075: 0000
0076: 0000
0077: 0000             ASCII_A    EQU    'A'
0078: 0000             ASCII_C    EQU    'C'
0079: 0000             ASCII_K    EQU    'K'
0080: 0000             ASCII_N    EQU    'N'
0081: 0000             ASCII_Q    EQU    'Q'
0082: 0000             ASCII_R    EQU    'R'
0083: 0000             ASCII_W    EQU    'W'
0084: 0000             ASCII_Y    EQU    'Y'
0085: 0000             CARET      EQU    '^'
0086: 0000             ASCII_LO_A EQU    'a'
0087: 0000             ASCII_LO_K EQU    'k'
0088: 0000             ASCII_LO_P EQU    'p'
0089: 0000             LEFT_CURLY EQU    '{'                  ; Left curly Bracket
0090: 0000
0091: 0000         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0092: 0000                        Include ./osHeader.Z80
0093: 0000         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0094: 0000         ;     File created by MakeZ80Source on Mon Sep 17 16:25:47 EDT 2018 from:
0095: 0000         ;     C:\Users\admin\Dropbox\Resources\CPM\CurrentOS\8080\osHeader.asm
0096: 0000         ; osHeader.asm
0097: 0000
0098: 0000         ; 2017-03-02 Refactored the CP/M Suite
0099: 0000
0100: 0000         ; Contains the Equates used by the CP/M system
0101: 0000
0102: 0000         ;------------------------Page Zero Constants ---------------------------------
0103: 0000             RAM        EQU    0                    ; Start of RAM ( and the Base page)
0104: 0000
0105: 0000             WarmBoot   EQU    RAM + 0              ; Contains a JMP instruction to warm boot in BIOS
0106: 0000             BIOSPAGE   EQU    RAM + 2              ; BIOS Jump Vector Page
0107: 0000             IOBYTE     EQU    RAM + 3              ; Input/Output redirection byte
0108: 0000
0109: 0000             Pg0CurentUser EQU    RAM + 4              ; Current user ( bits 7-4)
0110: 0000             Pg0CurentDisk EQU    Pg0CurentUser        ; Default logical disk (bits 0-3)
0111: 0000
0112: 0000             BDOSE      EQU    RAM + 5              ; Contains a JMP to BDOS entry
0113: 0000             TopRAM     EQU    BDOSE+2              ; Top page of usable RAM
0114: 0000
0115: 0000             FCB1       EQU    RAM + 05CH           ; File Control Block #1
0116: 0000             FCB2       EQU    FCB1 + 16            ; File Control Block #2
0117: 0000
0118: 0000             ComTail    EQU    RAM + 080H           ; Complete command tail
0119: 0000             ComTailCount EQU    ComTail + 1          ; Count of the number of char in tail
0120: 0000             ComTailChars EQU    ComTailCount + 1     ; Complete Command tail up-cased, w/o trailing CR
0121: 0000         ;-----------------------------------------------------------------------
0122: 0000
0123: 0000             DMABuffer  EQU    RAM + 080H           ; Default "DMA" address used as buffer
0124: 0000         ;-----------------------------------------------------------------------
0125: 0000             TPA        EQU    RAM + 0100H          ; Start of Transient program Area
0126: 0000         ;-----------------------------------------------------------------------
0127: 0000             END_OF_FILE EQU    1AH                  ; end of file
0128: 0000         ;-----------------------------------------------------------------------
0129: 0000
0130: 0000         ;--------------- CP/M Constants -----------------------------------------
0131: 0000
0132: 0000             CCPLength  EQU    0800H                ; Constant
0133: 0000             BDOSLength EQU    0E00H                ; Constant 0E00H
0134: 0000             BIOSLength EQU    0A00H                ; Constant 0900H
0135: 0000
0136: 0000             LengthInBytes EQU    CCPLength + BDOSLength + BIOSLength
0137: 0000             LengthInK  EQU    (LengthInBytes/1024) + 1
0138: 0000
0139: 0000             MemorySize EQU    64
0140: 0000
0141: 0000             CCPEntry   EQU    (MemorySize * 1024) - LengthInBytes
0142: 0000
0143: 0000             BDOSBase   EQU    CCPEntry + CCPLength
0144: 0000             BDOSEntry  EQU    BDOSBase + 6
0145: 0000
0146: 0000             BIOSBase   EQU    BDOSBase + BDOSLength
0147: 0000             BIOSStart  EQU    CCPEntry + CCPLength + BDOSLength
0148: 0000         ;-----------------------------------------------------------------------
0149: 0000
0150: 0000         ;------------------- BDOS System Call Equates --------------------------
0151: 0000             fConsoleIn EQU    01H                  ; rcharf - Console Input
0152: 0000             fConsoleOut EQU    02H                  ; pcharf - Console Output
0153: 0000             fPrintString EQU    09H                  ; pbuff	- Print String
0154: 0000             fReadString EQU    0AH                  ; rbuff	- Read Console String
0155: 0000             fGetConsoleStatus EQU    0BH                  ; breakf - Get Console Status
0156: 0000             fGetVersion EQU    0CH                  ; liftf	- Return Version Number
0157: 0000             fResetSystem EQU    0DH                  ; initf	- Reset Disk System
0158: 0000             fSelectDisk EQU    0EH                  ; self	- Select Disk
0159: 0000             fOpenFile  EQU    0FH                  ; openf	- Open File
0160: 0000             fCloseFile EQU    10H                  ; closef - Close File
0161: 0000             fSearchFirst EQU    11H                  ; searf	- Search For First
0162: 0000             fSearchNext EQU    12H                  ; searnf - Search for Next
0163: 0000             fDeleteFile EQU    13H                  ; delf - Delete File
0164: 0000             fReadSeq   EQU    14H                  ; dreadf - Read Sequential
0165: 0000             fWriteSeq  EQU    15H                  ; dwritf - Write Sequential
0166: 0000             fMakeFile  EQU    16H                  ; makef	- Make File
0167: 0000             fRenameFile EQU    17H                  ; renf	- Rename File
0168: 0000             fGetLoginVector EQU    18H                  ; logf	- Return Login Vector
0169: 0000             fGetCurrentDisk EQU    19H                  ; cself	- Return Current Disk
0170: 0000             fSetDMA    EQU    1AH                  ; dmaf	- Set DMA address
0171: 0000             fGetSetUserNumber EQU    20H                  ; userf	- Set/Get User Code
0172: 0000         ;-----------------------------------------------------------------------
0173: 0000
0174: 0000
0175: 0000
0176: 0000
0177: 0000
0178: 0000         ;*******************************************************************************
0179: 0000         ; These are the values handed over by the BDOS when it calls the Writer operation
0180: 0000         ; The allocated.unallocated indicates whether the BDOS is set to write to an
0181: 0000         ; unallocated allocation block (it only indicates this for the first 128 byte
0182: 0000         ; sector write) or to an allocation block that has already been allocated to a
0183: 0000         ; file. The BDOS also indicates if it is set to write to the file directory
0184: 0000         ;*******************************************************************************
0185: 0000             WriteAllocated EQU    00H
0186: 0000             WriteDirectory EQU    01H
0187: 0000             WriteUnallocated EQU    02H
0188: 0000
0189: 0000
0190: 0000         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0191: 0000                        Include ./diskHeader.Z80
0192: 0000         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0193: 0000         ;     File created by MakeZ80Source on Mon Sep 17 16:26:22 EDT 2018 from:
0194: 0000         ;     C:\Users\admin\Dropbox\Resources\CPM\CurrentOS\8080\diskHeader.asm
0195: 0000         ; diskHeader.asm
0196: 0000
0197: 0000         ; 2017-03-02 Refactored the CP/M Suite
0198: 0000
0199: 0000         ; needs osHeader.asm declared before this is used !!!!!!!
0200: 0000
0201: 0000         ; Contains the Equates used by the CP/M system to handle disks
0202: 0000
0203: 0000
0204: 0000         ;*******************************************************************************
0205: 0000         ;
0206: 0000         ;     Disk related values
0207: 0000         ;
0208: 0000         ;
0209: 0000         ;*******************************************************************************
0210: 0000             DiskStatusLocation EQU    043H                 ; status after disk I/O placed here
0211: 0000             DiskControlByte EQU    045H                 ; control byte for disk I/O
0212: 0000             DiskCommandBlock EQU    046H                 ; Control Table Pointer
0213: 0000         ; for boot
0214: 0000             DiskControlTable EQU    0040H
0215: 0000
0216: 0000             DiskReadCode EQU    01H                  ; Code for Read
0217: 0000             DiskWriteCode EQU    02H                  ; Code for Write
0218: 0000
0219: 0000
0220: 0000             cpmRecordSize EQU    080H                 ; (128) record size that CP/M uses
0221: 0000             diskSectorSize EQU    200H                 ; (512) size of physical disk I/O
0222: 0000             recordsPerSector EQU    diskSectorSize/cpmRecordSize
0223: 0000
0224: 0000             DirEntrySize EQU    20H                  ; (32)
0225: 0000             DirBuffSize EQU    cpmRecordSize
0226: 0000
0227: 0000             DirectoryEntryPerRecord EQU    cpmRecordSize / DirEntrySize
0228: 0000
0229: 0000             RecordsPerExtent EQU    080H                 ; extent Record capacity
0230: 0000
0231: 0000
0232: 0000         ;-------------------------------------------------------------------------------------
0233: 0000             NumberOfLogicalDisks EQU    4                    ; max number of disk in this system
0234: 0000
0235: 0000         ;----------------------3.5 Double Density Disk Geometry----------------------------------------
0236: 0000             NumberOfHeads EQU    02H                  ; number of heads
0237: 0000             TracksPerHead EQU    50H                  ; 80
0238: 0000             SectorsPerTrack EQU    12H                  ; 18 -  1 head only
0239: 0000             SectorsPerBlock EQU    04H                  ; 2048 bytes
0240: 0000             DirectoryBlockCount EQU    02H                  ;
0241: 0000         ;-----------------------------------------------------------------------
0242: 0000
0243: 0000             BlockSize  EQU    SectorsPerBlock * 	diskSectorSize ; Size in Bytes
0244: 0000
0245: 0000             RecordsPerBlock EQU    recordsPerSector * SectorsPerBlock
0246: 0000
0247: 0000             TotalNumberOfSectors EQU    SectorsPerTrack * TracksPerHead * NumberOfHeads
0248: 0000             TotalNumberOfBlocks EQU    TotalNumberOfSectors / SectorsPerBlock
0249: 0000             SectorsPerCylinder EQU    SectorsPerTrack * NumberOfHeads
0250: 0000
0251: 0000             SystemSectors EQU    LengthInBytes / diskSectorSize + 1 ; need to account for boot sector
0252: 0000             myOffset   EQU    (SystemSectors / SectorsPerCylinder) + 1 ;
0253: 0000             DataSectors EQU    TotalNumberOfSectors - (SectorsPerCylinder * myOffset)
0254: 0000             DataBlocks EQU    DataSectors / 	SectorsPerBlock
0255: 0000
0256: 0000         ;-----------------------------------------------------------------------
0257: 0000         ;; Disk block parameters for F3HD - 3.5 HD   1.44 MB Diskette
0258: 0000         ;-----------------------------------------------------------------------
0259: 0000         ;dpb3hdSPT				EQU		0090H			; cpmRecords per track- (144)
0260: 0000             dpb3hdSPT  EQU    recordsPerSector * SectorsPerTrack * NumberOfHeads ; SPT - records per Clynder
0261: 0000             dpb3hdBSH  EQU    04H                  ; Block Shift Factor - BlockSize = 128 * (2**BSH)											; BSH = Log2(BlockSize/cpmRecordSize)
0262: 0000             dpb3hdBLM  EQU    0FH                  ; BlockMask = (2**BSH) -1
0263: 0000             dpb3hdEXM  EQU    00H                  ; Extent mask = (PhysicalExtents/LogicalExtents) - 1
0264: 0000             dpb3hdDSM  EQU    DataBlocks -1        ; Maximum allocation block number (710)
0265: 0000             dpb3hdDRM  EQU    ((BlockSize *  DirectoryBlockCount)	/	DirEntrySize) -1 ; DRM Number of directory entries - 1 (127)
0266: 0000             dpb3hdAL0  EQU    0C0H                 ; Bit map for reserving 1 alloc. block
0267: 0000             dpb3hdAL1  EQU    00H                  ;  for each file directory
0268: 0000             dpb3hdCKS  EQU    (dpb3hdDRM +1)/ DirectoryEntryPerRecord ; Disk change work area size (32)
0269: 0000             dpb3hdOFF  EQU    myOffset             ; Number of tracks before directory
0270: 0000             dpb3hdNOH  EQU    NumberOfHeads
0271: 0000
0272: 0000         ;*******************************************************************************
0273: 0000
0274: 0000             SectorMask EQU    SectorsPerBlock - 1
0275: 0000
0276: 0000         ;***************************************************************************
0277: 0000
0278: 0000         ;<<<<<<<<<<<<<<<<<<<<<<< Include >>>>>>>>>>>>>>>>
0279: 0000
0280: 0000             BOOT_CON_ADDRESS EQU    0ECH                 ; tty data address
0281: 0000             IOBYTE_DEFAULT EQU    080H                 ; LST:=LPT, rest all = TTY:
0282: 0000
0283: 0000
0284: 0000             WarmBootEntry EQU    BIOSStart + 3
0285: 0000
0286: 0000                        ORG    TPA
0287: 0100             Start:
0288: 0100 31 FF 00               LD     SP,Start-1           ; stack goes down from here
0289: 0103 CD B4 01               CALL   SendBootMessage      ; display boot message
0290: 0106 06 3B                  LD     B,Page0ImageEnd-Page0Image ; Size of code to move
0291: 0108 21 3C 01               LD     HL,Page0Image        ; Source of page 0 code
0292: 010B 11 00 00               LD     DE,0000              ; Location 0, the target
0293: 010E
0294: 010E         ; Set up page zero,Move (B) bytes from (HL) to (DE).
0295: 010E
0296: 010E             HL2DE:
0297: 010E 7E                     LD     A,(HL)
0298: 010F 12                     LD     (DE),A
0299: 0110 23                     INC    HL
0300: 0111 13                     INC    DE
0301: 0112 05                     DEC    B
0302: 0113 C2 0E 01               JP     NZ,HL2DE
0303: 0116
0304: 0116         ; Now  start to move data to Disk Control Block
0305: 0116
0306: 0116 21 2F 01               LD     HL,BootControl
0307: 0119 22 46 00               LD     (DiskCommandBlock),HL ; put it into the Command block for drive A:
0308: 011C
0309: 011C
0310: 011C 21 45 00               LD     HL,DiskControlByte
0311: 011F 36 80                  LD     (HL),080H            ; activate the controller
0312: 0121
0313: 0121             WaitForBootComplete:
0314: 0121 7E                     LD     A,(HL)               ; Get the control byte
0315: 0122 B7                     OR     A                    ; is it set to 0 (Completed operation) ?
0316: 0123 C2 21 01               JP     NZ,WaitForBootComplete ; if not try again
0317: 0126
0318: 0126 3A 43 00               LD     A,(DiskStatusLocation) ; after operation what's the status?
0319: 0129 FE 80                  CP     080H                 ; any errors ?
0320: 012B
0321: 012B D2 00 00               JP     NC,0000              ; now do a warm boot
0322: 012E         ; else we have a problem
0323: 012E 76                     HALT
0324: 012F         ;---------------------------------------------------
0325: 012F
0326: 012F             BootControl:
0327: 012F 01                     DB     DiskReadCode         ; Read function
0328: 0130 00                     DB     00H                  ; unit number
0329: 0131 00                     DB     00H                  ; head number
0330: 0132 00                     DB     00H                  ; track number
0331: 0133 0D                     DB     0DH                  ; Starting sector number (13)
0332: 0134 00 0A                  DW     5 * 512              ; Number of bytes to read ( 0A00 All of BIOS)
0333: 0136 00 F6                  DW     BIOSStart            ; read into this address
0334: 0138 43 00                  DW     DiskStatusLocation   ; pointer to next block - no linking
0335: 013A 40 00                  DW     DiskControlTable     ; pointer to next table- no linking
0336: 013C
0337: 013C         ;---------------------------------------------------
0338: 013C
0339: 013C             Page0Image:
0340: 013C C3 03 F6               JP     WarmBootEntry        ; warm start
0341: 013F         ;IOBYTE:
0342: 013F 80                     DB     IOBYTE_DEFAULT       ; IOBYTE-
0343: 0140             DefaultDisk:
0344: 0140 00                     DB     00H                  ; Current default drive (A)
0345: 0141 C3 06 E8               JP     BDOSEntry            ; jump to BDOS entry
0346: 0144                        DS     028H                 ; interrupt locations 1-5 not used
0347: 016C                        DS     008H                 ; interrupt location 6 is reserved
0348: 0174 C3 00 00               JP     0000H                ; rst 7 used only by DDT & SID programs
0349: 0177             Page0ImageEnd:
0350: 0177
0351: 0177         ;---------------------------------------------------
0352: 0177
0353: 0177
0354: 0177             BootMessage:
0355: 0177 0D 0A                  DB     CR,LF
0356: 0179 43 50 2F 4D 20 32 2E 32 20 42 6F 6F 74 53 74 72 61 70                DB     'CP/M 2.2 BootStrap'
0357: 018B 20 6C 6F 61 64 65 72                DB     ' loader'
0358: 0192 0D 0A                  DB     CR,LF,
0359: 0194 42 75 69 6C 64 20                DB     'Build '
0360: 019A 31 2E 31 30 20 20 3A 20 31 2E 30 20 2D 20 31 2E 31 20 2D 20 31 2E 32                DB     '1.10  : 1.0 - 1.1 - 1.2'
0361: 01B1 0D 0A 00                DB     CR,LF,EndOfMessage
0362: 01B4
0363: 01B4             SendBootMessage:
0364: 01B4 21 77 01               LD     HL,BootMessage
0365: 01B7             SendMessage1:
0366: 01B7 7E                     LD     A,(HL)
0367: 01B8 B7                     OR     A
0368: 01B9 C8                     RET    Z
0369: 01BA D3 EC                  OUT    (BOOT_CON_ADDRESS),A ; Console address
0370: 01BC 23                     INC    HL
0371: 01BD C3 B7 01               JP     SendMessage1
0372: 01C0
0373: 01C0
0374: 01C0         ;---------------------------------------------------
0375: 01C0
           ************************   Xref   ************************
0000: $               01BD
0077: ASCII_A         0041
0078: ASCII_C         0043
0079: ASCII_K         004B
0086: ASCII_LO_A      0061
0087: ASCII_LO_K      006B
0088: ASCII_LO_P      0070
0029: ASCII_MASK      007F
0080: ASCII_N         004E
0081: ASCII_Q         0051
0082: ASCII_R         0052
0083: ASCII_W         0057
0084: ASCII_Y         0059
0064: ASCII_ZERO      0030
0058: ASTERISK        002A
0143: BDOSBase        E800   0144 0146
0112: BDOSE           0005   0113
0144: BDOSEntry       E806   0345
0133: BDOSLength      0E00   0136 0146 0147
0047: BELL            0007
0146: BIOSBase        F600
0134: BIOSLength      0A00   0136
0106: BIOSPAGE        0002
0147: BIOSStart       F600   0284 0333
0243: BlockSize       0800   0265
0280: BOOT_CON_ADDRESS 00EC   0369
0326: BootControl     012F   0306
0354: BootMessage     0177   0364
0025: BYTE            0001
0085: CARET           005E
0141: CCPEntry        E000   0143 0147
0132: CCPLength       0800   0136 0143 0147
0065: COLON           003A
0060: COMMA           002C
0118: ComTail         0080   0119
0120: ComTailChars    0082
0119: ComTailCount    0081   0120
0220: cpmRecordSize   0080   0222 0225 0227
0050: CR              000D   0355 0358 0361
0033: CTRL_C          0003
0034: CTRL_E          0005
0035: CTRL_H          0008
0036: CTRL_K          000B
0037: CTRL_L          000C
0038: CTRL_P          0010
0039: CTRL_R          0012
0040: CTRL_S          0013
0041: CTRL_U          0015
0042: CTRL_X          0018
0043: CTRL_Z          001A
0061: DASH            002D
0254: DataBlocks      02C7   0264
0253: DataSectors     0B1C   0254
0343: DefaultDisk     0140
0225: DirBuffSize     0080
0240: DirectoryBlockCount 0002   0265
0227: DirectoryEntryPerRecord 0004   0268
0224: DirEntrySize    0020   0227 0265
0212: DiskCommandBlock 0046   0307
0211: DiskControlByte 0045   0310
0214: DiskControlTable 0040   0335
0216: DiskReadCode    0001   0327
0221: diskSectorSize  0200   0222 0243 0251
0210: DiskStatusLocation 0043   0318 0334
0217: DiskWriteCode   0002
0123: DMABuffer       0080
0054: DOLLAR          0024
0266: dpb3hdAL0       00C0
0267: dpb3hdAL1       0000
0262: dpb3hdBLM       000F
0261: dpb3hdBSH       0004
0268: dpb3hdCKS       0020
0265: dpb3hdDRM       007F   0268
0264: dpb3hdDSM       02C6
0263: dpb3hdEXM       0000
0270: dpb3hdNOH       0002
0269: dpb3hdOFF       0001
0260: dpb3hdSPT       0090
0127: END_OF_FILE     001A
0031: EndOfMessage    0000   0361
0069: EQUAL_SIGN      003D
0052: EXCLAIM_POINT   0021
0020: FALSE           0000
0115: FCB1            005C   0116
0116: FCB2            006C
0160: fCloseFile      0010
0151: fConsoleIn      0001
0152: fConsoleOut     0002
0163: fDeleteFile     0013
0155: fGetConsoleStatus 000B
0169: fGetCurrentDisk 0019
0168: fGetLoginVector 0018
0171: fGetSetUserNumber 0020
0156: fGetVersion     000C
0166: fMakeFile       0016
0159: fOpenFile       000F
0153: fPrintString    0009
0164: fReadSeq        0014
0154: fReadString     000A
0167: fRenameFile     0017
0157: fResetSystem    000D
0161: fSearchFirst    0011
0162: fSearchNext     0012
0158: fSelectDisk     000E
0170: fSetDMA         001A
0165: fWriteSeq       0015
0070: GREATER_THAN    003E
0053: HASH_TAG        0023
0296: HL2DE           010E   0302
0107: IOBYTE          0003
0281: IOBYTE_DEFAULT  0080   0342
0056: L_PAREN         0028
0073: LEFT_ARROW      005F
0089: LEFT_CURLY      007B
0136: LengthInBytes   2000   0137 0141 0251
0137: LengthInK       0009
0068: LESS_THAN       003C
0049: LF              000A   0355 0358 0361
0023: LO_NIBBLE_MASK  000F
0139: MemorySize      0040   0141
0252: myOffset        0001   0253 0269
0045: NULL            0000
0236: NumberOfHeads   0002   0247 0249 0260 0270
0233: NumberOfLogicalDisks 0004
0022: OFF             0000
0021: ON              FFFF
0339: Page0Image      013C   0290 0291
0349: Page0ImageEnd   0177   0290
0055: PERCENT         0025
0062: PERIOD          002E
0110: Pg0CurentDisk   0004
0109: Pg0CurentUser   0004   0110
0059: PLUS_SIGN       002B
0071: QMARK           003F
0057: R_PAREN         0029
0103: RAM             0000   0105 0106 0107 0109 0112 0115 0118 0123 0125
0245: RecordsPerBlock 0010
0229: RecordsPerExtent 0080
0222: recordsPerSector 0004   0245 0260
0074: RUBOUT          007F
0274: SectorMask      0003
0239: SectorsPerBlock 0004   0243 0245 0248 0254 0274
0249: SectorsPerCylinder 0024   0252 0253
0238: SectorsPerTrack 0012   0247 0249 0260
0067: SEMICOLON       003B
0363: SendBootMessage 01B4   0289
0365: SendMessage1    01B7   0371
0063: SLASH           002F
0046: SOH             0001
0051: SPACE           0020
0287: Start           0100   0288
0251: SystemSectors   0011   0252
0048: TAB             0009
0113: TopRAM          0007
0248: TotalNumberOfBlocks 02D0
0247: TotalNumberOfSectors 0B40   0248 0253
0125: TPA             0100   0286
0237: TracksPerHead   0050   0247
0019: TRUE            FFFF
0072: UNDER_SCORE     005F
0313: WaitForBootComplete 0121   0316
0105: WarmBoot        0000
0284: WarmBootEntry   F603   0340
0026: WORD            0002
0185: WriteAllocated  0000
0186: WriteDirectory  0001
0187: WriteUnallocated 0002
0030: ZERO            0000
